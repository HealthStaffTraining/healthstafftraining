<?phpif (realpath(__FILE__) == realpath($_SERVER['SCRIPT_FILENAME'])){  // tell people trying to access this file directly goodbye...  exit('This file can not be accessed directly...');}// Define the classclass stars{		//constructor		//=============================================		function __construct(){			date_default_timezone_set('America/New_York');			$this->myURL = 'leads.anthem.edu';			//echo "<hr>You made it bruva<hr>";		}		public function starsCurl($fields){			$a = explode("&", $fields);			$string = "";			$vendorCode = "CTWEB";			$URL = "http://www.careertechfl.com"; // default URL			foreach($a as $key=>$value) {				//echo $key."=".$value."\n";				$b = explode("=", $value);					switch ($b[0]) {					    case "address1":					        $string .= "Address=" . $b[1] . "&";					        break;					    case "firstname":					        $string .= "FirstName=" . $b[1] . "&";					        break;					    case "lastname":					        $string .= "LastName=" . $b[1] . "&";					        break;					    case "email":					        $string .= "Email=" . $b[1] . "&";					        break;					    case "city":					        $string .= "City=" . $b[1] . "&";					        break;					    case "state":					        $string .= "State=" . $b[1] . "&";					        break;					    case "zip":					        $string .= "Zip=" . $b[1] . "&";					        break;					    case "campus":					        //$string .= "CampusID=" . $this->getCampusID($b[1]) . "&Campus=".$this->getCampusID($b[1])."&";					        $string .= "CampusID=" . $this->getCampusID($b[1]) ."&";					        break;					    case "program":					        $string .= "ProgramCode=" . $this->getProgramCode($b[1]) . "&";					        break;					    case "hphone1":					        $HomePhoneNumber .= $b[1] . "-";					        break;					    case "hphone2":					        $HomePhoneNumber .= $b[1] . "-";					        break;					    case "hphone3":					        $HomePhoneNumber .= $b[1];					        break;					    case "vendorCode":					        $vendorCode = $b[1];					        break;					    case "HomePhoneNumber":					    	$HomePhoneNumber = $b[1];					    	break;					    case "URL":					    	$URL = $b[1];					    	break;					    default:					       //echo $b[0] . "=" .urldecode($b[1])."<hr>";					       $string .= $b[0]."=" . urlencode($b[1]) . "&";					        break;					}			}			$HomePhoneNumber = str_replace("(","",$HomePhoneNumber);			$HomePhoneNumber = str_replace(")","",$HomePhoneNumber);			$HomePhoneNumber = str_replace("-","",$HomePhoneNumber);			$string .= "HomePhoneNumber=".$HomePhoneNumber."&";			$string .= "URL=".$URL."&";			$string .= "IpAddress=".$_SERVER['REMOTE_ADDR']."&";			$string .= "RepID=7871&";			$string .= "VendorCode=".$vendorCode."&";			$string .= "OptInCellPhone=TRUE&";			$string .= "IpAddress=".$_SERVER['REMOTE_ADDR']."&";			$string .= "HomePhoneNumber=".$HomePhoneNumber."&";			$string .= "DateSigned=".DATE("Y-m-d")."&";			$string .= "mode=bridge&"; // bridge sends it to the proper web service			//$string .= "debugging=testing&";// comment out when going live			$fields = $string;			//echo "\n\n".$this->myURL. "\n\n".$fields; exit;			// Connect to this URL			$myURL = 'leads.anthem.edu';			// initialize the cURL session			$ch = curl_init();			//print out reply headers: 0 no 1 yes			curl_setopt($ch, CURLOPT_HEADER, 1);			//TRUE to disable the progress meter for cURL transfers.			curl_setopt($ch, CURLOPT_NOPROGRESS, 1);			// Follow any Location headers			curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);			// Set the URL			curl_setopt($ch, CURLOPT_URL, $myURL);			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); //FALSE to stop cURL from verifying the peer's certificate.			curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 1);// 1 to check the existence of a common name in the SSL peer certificate.			// Tell cURL to return the results into the $ch variable as opposed to printing them out			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);			// Alert cURL to the fact that we're doing a POST, and pass the associative array for POSTing			curl_setopt($ch, CURLOPT_POST, 1);			// Post your values to the opened script			curl_setopt ($ch, CURLOPT_POSTFIELDS, $fields);			// Optionally set a timeout			curl_setopt($ch, CURLOPT_TIMEOUT, 15);			// Execute your cURL script			//curl_exec($ch);			$output = curl_exec($ch);			// close your session and free up the resources taken up by cURL			curl_close($ch);			//send curl url submission to dbug area			$post_url = 'http://'.$myURL.'/?'.$fields;			//allow testing curl by sending URL query			if($_GET['test'] == 'curl') {print_r($post_url);echo '<br /><br /><pre>';var_export($_POST);exit;}			//echo "<hr><h1>OUTPUT</h1>".$output."<hr>".$post_url;			return $output;		}		function getCampusID($campus){			switch ($campus) {			    case "Corporate+Office":			        $r = "COR";			        break;			    case "Riverside":			        $r = "RIS";			        break;			    case "Anaheim":			        $r = "ANA";			        break;			    case "San+Marcos":			        $r = "SAM";			        break;			    case "Montclair":			        $r = "MON";			        break;			    case "San+Diego":			        $r = "SAD";			        break;			    default:			        $r = $campus;			        break;			}			return $r;		}		function getProgramCode($program){			switch ($program) {			    case "A%26CMA":			        $r = "AA";			        break;			    case "AMC":			        $r = "MC";			        break;			    case "AP":			    	$r = "PR";			    	break;			    case "CMA":			        $r = "MA";			        break;			    case "COS":			        $r = "OS";			        break;			    case "COAS":			        $r = "OA";			        break;			    case "CPT":			        $r = "PT";			        break;			    case "MAS":			        $r = "AS";			        break;			    case "Mb":			        $r = "MB";			        break;			    case "MOA":			        $r = "MO";			        break;			    case "MT":			    	$r = "MC";			    default:			        $r = $program;			        break;			}			return $r;		}} // end class definition?>